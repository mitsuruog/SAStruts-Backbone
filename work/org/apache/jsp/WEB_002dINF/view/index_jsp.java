/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2012-12-16 13:40:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/view/common/common.jsp", Long.valueOf(1355497332747L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title>Dolteng Auto Generated</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>Hello World!</h1>\r\n");
      out.write("\r\n");
      out.write("<div id=\"action\">\r\n");
      out.write("<button type=\"button\" id=\"create\">create->POST[/collecion]</button>\r\n");
      out.write("<button type=\"button\" id=\"read\">read->GET[/collection/id]</button>\r\n");
      out.write("<button type=\"button\" id=\"update\">update->PUT[/collection/id]</button>\r\n");
      out.write("<button type=\"button\" id=\"delete\">delete->DELETE[collection/id]</button>\r\n");
      out.write("\r\n");
      out.write("<form>\r\n");
      out.write("\t<label>name:\r\n");
      out.write("\t\t<input type=\"text\" name=\"name\">\r\n");
      out.write("\t</label>\r\n");
      out.write("\t<label>age:\r\n");
      out.write("\t\t<select name=\"age\">\r\n");
      out.write("\t\t\t<option value=\"10\">10</option>\r\n");
      out.write("\t\t\t<option value=\"20\">20</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t</label>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<ul id=\"models\"></ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/assets/jquery-1.8.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/assets/underscore-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/assets/backbone.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/assets/moment.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("(function(){\r\n");
      out.write("\r\n");
      out.write("var PROTO = {\r\n");
      out.write("\tModels: {},\r\n");
      out.write("\tCollections: {},\r\n");
      out.write("\tViews: {}\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("PROTO.Models.model = Backbone.Model.extend({\r\n");
      out.write("\turl: 'models'\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("PROTO.Collections.collection = Backbone.Collection.extend({\r\n");
      out.write("\tmodel: PROTO.Models.model,\r\n");
      out.write("\turl: '/Seaser-Backbone/collection/'\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("PROTO.Views.view = Backbone.View.extend({\r\n");
      out.write("\tel: '#action',\r\n");
      out.write("\tinitialize: function(option){\r\n");
      out.write("\t\tthis.sampleModel = option.sampleModel;\r\n");
      out.write("\t\tthis.collection = new PROTO.Collections.collection([option.sampleModel]);\r\n");
      out.write("\t},\r\n");
      out.write("\tevents: {\r\n");
      out.write("\t\t'click #create': 'create',\r\n");
      out.write("\t\t'click #read': 'read',\r\n");
      out.write("\t\t'click #update': 'update',\r\n");
      out.write("\t\t'click #delete': 'delete'\r\n");
      out.write("\t},\r\n");
      out.write("\tcreate: function(){\r\n");
      out.write("\t\tvar param = {};\r\n");
      out.write("\t\t_.each($('form').serializeArray(), function(v){\r\n");
      out.write("\t\t\tparam[v.name] = v.value;\r\n");
      out.write("\t\t});\r\n");
      out.write("//\t\tthis.collection.create(new PROTO.Models.model(param));\r\n");
      out.write("\t\tthis.collection.create(this.sampleModel);\r\n");
      out.write("\t},\r\n");
      out.write("\tread: function(){\r\n");
      out.write("\t\tthis.collection.fetch({\r\n");
      out.write("\t\t\tsuccess : this.render\r\n");
      out.write("\t\t});\r\n");
      out.write("\t},\r\n");
      out.write("\tupdate: function(){\r\n");
      out.write("\t\tthis.sampleModel.save({\r\n");
      out.write("\t\t\tname: 'fizzbuzz'\r\n");
      out.write("\t\t});\r\n");
      out.write("\t},\r\n");
      out.write("\tdelete: function(){\r\n");
      out.write("\t\tthis.sampleModel.destroy();\r\n");
      out.write("\t},\r\n");
      out.write("\trender: function(data){\r\n");
      out.write("    \tvar tmpl = _.template($('#tmpl-model').html());\r\n");
      out.write("    \tvar html;\r\n");
      out.write("    \t_.each(data.models, function(model){\r\n");
      out.write("    \t\thtml = html + tmpl(model.toJSON());\r\n");
      out.write("    \t});\r\n");
      out.write("        $('#models').append(html);\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("new PROTO.Views.view({\r\n");
      out.write("\tsampleModel: new PROTO.Models.model({\r\n");
      out.write("\t\tname: 'mitsuruog',\r\n");
      out.write("\t\tage: '36'\r\n");
      out.write("\t})\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("})();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
